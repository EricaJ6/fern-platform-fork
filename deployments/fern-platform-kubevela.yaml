# KubeVela Application for Fern Platform
apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: fern-platform
  namespace: fern-platform
spec:
  components:
    # PostgreSQL Database using simple deployment
    - name: postgres
      type: cloud-native-postgres
      properties:
        name: postgres
        namespace: fern-platform
        instances: 1
        storageSize: 0.5Gi

    # Redis Cache
    - name: redis
      type: webservice
      properties:
        image: redis:7-alpine
        namespace: fern-platform
        imagePullPolicy: IfNotPresent
        ports:
          - port: 6379
            expose: true
        cpu: "100m"
        memory: "128Mi"

    # Fern Platform Service  
    - name: fern-platform
      type: webservice
      dependsOn:
        - postgres
        - redis
      properties:
        image: fern-platform:latest
        imagePullPolicy: IfNotPresent
        namespace: fern-platform
        ports:
          - port: 8080
            expose: true
        env:
          - name: LOG_LEVEL
            value: debug
          - name: REDIS_HOST
            value: redis
          - name: REDIS_PORT
            value: "6379"
        cpu: "200m"
        memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
      traits:
        - type: service-binding
          properties:
            envMappings:
              DB_USER:
                secret: postgres-app
                key: username
              DB_PASSWORD:
                secret: postgres-app
                key: password
              DB_HOST:
                secret: postgres-app
                key: host
              DB_PORT:
                secret: postgres-app
                key: port
              DB_NAME:
                secret: postgres-app
                key: dbname

  policies:
    - name: debug
      type: debug

    # Override policy for environment-specific configs
    - name: fern-platform-config
      type: override
      properties:
        components:
          - name: postgres
            properties:
              replicas: 1
          - name: redis
            properties:
              replicas: 1
          - name: fern-platform
            properties:
              replicas: 1

  workflow:
    steps:
      # Step 1: Deploy PostgreSQL database first
      - name: deploy-database
        type: apply-component
        properties:
          component: postgres
      
      # Step 2: Deploy Redis cache
      - name: deploy-redis
        type: apply-component
        properties:
          component: redis
      
      # Step 3: Wait for infrastructure to be ready
      - name: wait-for-infrastructure
        type: suspend
        properties:
          duration: 60s
      
      # Step 4: Deploy fern-platform after infrastructure is ready
      - name: deploy-application
        type: apply-component
        dependsOn:
          - deploy-database
          - deploy-redis
          - wait-for-infrastructure
        properties:
          component: fern-platform
