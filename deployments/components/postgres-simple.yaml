apiVersion: core.oam.dev/v1beta1
kind: ComponentDefinition
metadata:
  name: postgres-simple
  namespace: vela-system
  annotations:
    definition.oam.dev/description: "Simple PostgreSQL database deployment"
spec:
  workload:
    definition:
      apiVersion: apps/v1
      kind: Deployment
  schematic:
    cue:
      template: |
        output: {
        	apiVersion: "apps/v1"
        	kind:       "Deployment"
        	metadata: {
        		name:      context.name
        		namespace: context.namespace
        	}
        	spec: {
        		replicas: 1
        		selector: {
        			matchLabels: {
        				app: context.name
        			}
        		}
        		template: {
        			metadata: {
        				labels: {
        					app: context.name
        				}
        			}
        			spec: {
        				containers: [
        					{
        						name:  "postgres"
        						image: "postgres:15-alpine"
        						ports: [
        							{
        								containerPort: 5432
        							},
        						]
        						env: [
        							{
        								name:  "POSTGRES_DB"
        								value: parameter.database
        							},
        							{
        								name:  "POSTGRES_USER"
        								value: parameter.username
        							},
        							{
        								name:  "POSTGRES_PASSWORD"
        								value: parameter.password
        							},
        						]
        						volumeMounts: [
        							{
        								name:      "postgres-data"
        								mountPath: "/var/lib/postgresql/data"
        							},
        						]
        					},
        				]
        				volumes: [
        					{
        						name: "postgres-data"
        						emptyDir: {}
        					},
        				]
        			}
        		}
        	}
        }
        
        outputs: service: {
        	apiVersion: "v1"
        	kind:       "Service"
        	metadata: {
        		name:      context.name
        		namespace: context.namespace
        	}
        	spec: {
        		selector: {
        			app: context.name
        		}
        		ports: [
        			{
        				port:       5432
        				targetPort: 5432
        			},
        		]
        	}
        }
        
        parameter: {
        	// +usage=Database name to create
        	database: string
        	
        	// +usage=Database username
        	username: string
        	
        	// +usage=Database password
        	password: string
        }